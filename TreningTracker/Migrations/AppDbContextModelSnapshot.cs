// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TreningTracker.Data;

#nullable disable

namespace TreningTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TagTrainingSession", b =>
                {
                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.Property<int>("TrainingSessionsId")
                        .HasColumnType("integer");

                    b.HasKey("TagsId", "TrainingSessionsId");

                    b.HasIndex("TrainingSessionsId");

                    b.ToTable("TrainingSessionTags", (string)null);
                });

            modelBuilder.Entity("TreningTracker.Models.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bieganie"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rower"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spacer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Siłownia"
                        });
                });

            modelBuilder.Entity("TreningTracker.Models.GoalSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DailyStepsGoal")
                        .HasColumnType("integer");

                    b.Property<int>("WeeklyTrainingsGoal")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GoalSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DailyStepsGoal = 10000,
                            WeeklyTrainingsGoal = 3
                        });
                });

            modelBuilder.Entity("TreningTracker.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TreningTracker.Models.TrainingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Calories")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<int>("Steps")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.ToTable("TrainingSessions");
                });

            modelBuilder.Entity("TagTrainingSession", b =>
                {
                    b.HasOne("TreningTracker.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreningTracker.Models.TrainingSession", null)
                        .WithMany()
                        .HasForeignKey("TrainingSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TreningTracker.Models.TrainingSession", b =>
                {
                    b.HasOne("TreningTracker.Models.ActivityType", "ActivityType")
                        .WithMany("TrainingSessions")
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityType");
                });

            modelBuilder.Entity("TreningTracker.Models.ActivityType", b =>
                {
                    b.Navigation("TrainingSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
